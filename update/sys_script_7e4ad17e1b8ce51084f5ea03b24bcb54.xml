<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

// 	// date when filling form
// 	var nowDate = new GlideDateTime();
	
// 	// date entered in the form
// 	var whenNeeded = new GlideDateTime(current.u_when_needed);
	
// 	// check if enetered date is in the past
// 	if(whenNeeded.before(nowDate)){
// 		// show error msg
// 		gs.addErrorMessage('When needed date cannot be in the past.  Your request has not been saved to the database.');
		
// 		// abort adding date to database
// 		current.setAbortAction('true');
// 	}

// 	// Cannot submit when needed date for today(when the form is being filled) itself
// 	var today = nowDate.getLocalDate();
// 	var whenNeededDate = whenNeeded.getLocalDate();
	
// 	// compare both dates
// 	if(today.compareTo(whenNeededDate) == 0){
// 		// show error msg
// 		gs.addErrorMessage('You cannot submit NeedIt requests for today.');
		
// 		// abort adding date to database
// 		current.setAbortAction('true');
// 	}
	
	
	// Instantiate the NeedItUtils class.  Call the isDatePast method and pass 
	// the u_when_needed value.
	var niutils = new NeedItUtils();
	var isPast = niutils.isDatePast(current.u_when_needed);
	var isToday = niutils.isDateToday(current.u_when_needed);

	// If the isDatePast method returns true, the date is in the past.
	if(isPast == true){
		gs.addErrorMessage("When needed date cannot be in the past.  Your request has not been saved to the database.");
		current.setAbortAction(true);
	}
	
	// If the isDateToday method returns true, the date is set to today
	if(isToday == true){
		gs.addErrorMessage('You cannot submit NeedIt requests for today.');
		current.setAbortAction(true);
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-01 07:50:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7e4ad17e1b8ce51084f5ea03b24bcb54</sys_id>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_7e4ad17e1b8ce51084f5ea03b24bcb54</sys_update_name>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7e4ad17e1b8ce51084f5ea03b24bcb54"/>
</record_update>
